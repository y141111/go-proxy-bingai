name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  amd64build:
    name: Build amd64 Executable
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4

      - name: Build amd64 Executable
        run: go build -o go-proxy-bingai main.go

      - name: Package amd64 Executable
        run: tar -zcvf go-proxy-bingai-linux-amd64.tar.gz go-proxy-bingai

      - name: Upload amd64 Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: go-proxy-bingai-linux-amd64.tar.gz
          asset_name: go-proxy-bingai-linux-amd64.tar.gz
          asset_content_type: application/gzip

  arm64build:
    name: Build arm64 Executable
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4

      - name: Build arm64 Executable
        run: go build -o go-proxy-bingai main.go

      - name: Package arm64 Executable
        run: tar -zcvf go-proxy-bingai-linux-arm64.tar.gz go-proxy-bingai

      - name: Upload arm64 Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: go-proxy-bingai-linux-arm64.tar.gz
          asset_name: go-proxy-bingai-linux-arm64.tar.gz
          asset_content_type: application/gzip

  aarch64build:
    name: Build aarch64 Executable
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4

      - name: Build aarch64 Executable
        run: GOOS=linux GOARCH=arm64 go build -o go-proxy-bingai main.go

      - name: Package aarch64 Executable
        run: tar -zcvf go-proxy-bingai-linux-aarch64.tar.gz go-proxy-bingai

      - name: Upload aarch64 Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: go-proxy-bingai-linux-aarch64.tar.gz
          asset_name: go-proxy-bingai-linux-aarch64.tar.gz
          asset_content_type: application/gzip

  docker-build:
    name: Build and Push Docker Image
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref }}
            ghcr.io/${{ github.repository }}:latest
            docker.io/${{ github.repository }}:${{ github.ref }}
            docker.io/${{ github.repository }}:latest
